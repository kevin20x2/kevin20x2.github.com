<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类:  杂 | ZVINK's garden]]></title>
  <link href="http://kevin20x2.github.io/blog/categories/za/atom.xml" rel="self"/>
  <link href="http://kevin20x2.github.io/"/>
  <updated>2018-01-20T20:50:50+08:00</updated>
  <id>http://kevin20x2.github.io/</id>
  <author>
    <name><![CDATA[ZVINK]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[解决markdown 和latex 冲突的问题]]></title>
    <link href="http://kevin20x2.github.io/blog/2018/01/20/latex-in-markdown/"/>
    <updated>2018-01-20T20:14:36+08:00</updated>
    <id>http://kevin20x2.github.io/blog/2018/01/20/latex-in-markdown</id>
    <content type="html"><![CDATA[<p>最近配置了 VSCODE 用来写blog ，毕竟有实时预览和数学公式的插件，但是在写论文翻译的时候，在VSCODE 下预览没问题的地方部署的时候确没有正确转义，于是想着怎么解决这个问题。</p>

<!--more-->


<hr />

<p>最开始以为是 MathJax 的问题，后来换了Katex ，照着github 上的教程加了一些js 代码进去，发现有的能够正常显示，有的还是不行，效果跟Katex 一致。 后来直接百度发现 是 Markdown 转换 成 HTML 和latex 公式引擎转换的问题。</p>

<p>看了一下生成的html 文件，发现公式中的 ‘_’ 下划线有些被替代成了 \&lt;em>标签。这里就是问题所在了。    <br/>
参照<a href="https://liam0205.me/2015/09/09/fix-conflict-between-mathjax-and-markdown/">这里</a> <br/>
其思路是先用 markdown 中的 ` 反括号取消转义 ，表现在html上是用\&lt;code> 标签页包含要取消转义的部分，<br/>
用 js 做正则匹配，获取html 中 \&lt;code>标签页中的\$\$ 字符，然后调用 MathJax 的js 代码来渲染公式。</p>

<p>因为我用的是katex ，所以加上的代码稍有不同，也没有做正则匹配， 直接将原来有公式的地方 用 ` 反转义就好了。</p>

<p>&#8220;`js
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.9.0-beta/katex.min.css" integrity="sha384-L/SNYu0HM7XECWBeshTGLluQO9uVI1tvkCtunuoUbCHHoTH76cDyXty69Bb9I0qZ" crossorigin="anonymous"></p>

<script src="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.9.0-beta/katex.min.js" integrity="sha384-ad+n9lzhJjYgO67lARKETJH6WuQVDDlRfj81AJJSswMyMkXTD49wBj5EP004WOY6" crossorigin="anonymous"></script>


<script src ="https://cdnjs.cloudflare.com/ajax/libs/markdown-it/8.4.0/markdown-it.js" crossorigin="anonymous"
></script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.9.0-beta/contrib/auto-render.min.js" integrity="sha384-EkJr57fExjeMKAZnlVBuoBoX0EJ4BiDPiAd/JyTzIA65ORu4hna7V6aaq4zsUvJ2" crossorigin="anonymous"></script>


<script src="https://gitcdn.xyz/cdn/goessner/markdown-it-texmath/master/texmath.js" crossorigin="anonymous">
</script>


<p><link rel="stylesheet" href="https://gitcdn.xyz/cdn/goessner/markdown-it-texmath/master/texmath.css" crossorigin="anonymous"></p>

<script
 src="http://code.jquery.com/jquery-latest.js"></script>


<p><link rel="stylesheet" href="https://gitcdn.xyz/cdn/goessner/markdown-it-texmath/master/texmath.css" crossorigin="anonymous"></p>




<script type="text/javascript">
    $(document).ready(function(){
    $("code").map(function(){
     renderMathInElement(
           $(this)[0] ,
          {
              delimiters: [
                  {left: "$$", right: "$$", display: true},
                  {left: "\\[", right: "\\]", display: true},
                  {left: "$", right: "$", display: false},
                  {left: "\\(", right: "\\)", display: false}
              ]
          }
      );
    });
    });
</script>


<p>&#8220;`</p>

<p>其实我没写过js 代码，但是大致能够看懂，这里的坑有要用jquery ，不然代码中会有语法错误。 <br/>
基本思想是 找到markdown 生成的html文件中的 \&lt;code>标签，然后将其中的内容用renderMathInElement 函数处理就行了。用的是texmath 插件，跟VSCode 上的插件保持一致。</p>

<p>但是这个问题其实并没有完美解决，生成的 inline 公式在html 中会用一个黑框包起来，看起来不是很美观，这个是应该是主题的问题，应该找到\&lt;code> 字段的css文件将样式改一下就好了。</p>

<p>另外一个问题是用了反转义之后 VSCODE 插件上就不能正确预览了。 暂时只能先写公式确定没问题之后再加上 ` 字符了。这个问题感觉我这个前端新手需要花比较大的精力去解决。</p>

<div id="container"></div>


<p><link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"></p>

<script src="https://imsun.github.io/gitment/dist/gitment.browser.js"></script>


<script>
var gitment = new Gitment({
  id: 'location.href', // 可选。默认为 location.href
  owner: 'kevin20x2',
  repo: 'blog_comment',
  oauth: {
    client_id: '0d172133d26f520041e6',
    client_secret: '14eef65983bd9d0e16313feaffcf1684fc3713a9',
  },
})
gitment.render('container')
</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[redhat6.5从零开始离线安装qwt]]></title>
    <link href="http://kevin20x2.github.io/blog/2018/01/15/redhat6-dot-5-qwl/"/>
    <updated>2018-01-15T15:34:08+08:00</updated>
    <id>http://kevin20x2.github.io/blog/2018/01/15/redhat6-dot-5-qwl</id>
    <content type="html"><![CDATA[<p>项目需要不联网安装 QT,Qwt ，于是就开始了折腾之旅。</p>

<!--more-->


<p>大致流程如下： <br/>
* 安装redhat_linux6.5 服务器版
* 卸载自身的yum，使用离线rpm包重新安装CentOs的yum ，并安装downloadonly插件
* 使用yum 仅download createrepo库， libGL-devel ，gcc-c++
* 离线安装 createrepo 库，将下载下来的rpm 包做成本地仓库 。
* yum 安装 libGL-devel ， 离线安装gcc-c++
* 安装Qt 5.6
* 安装qwt 库</p>

<p>redhat 系统的安装是傻瓜式的，不用多说 。</p>

<p>更换CentOs源的方法参照 <a href="http://blog.csdn.net/ggxiaobai/article/details/53507715">http://blog.csdn.net/ggxiaobai/article/details/53507715</a></p>

<p>需要注意的是163的网址现在已经404了，所以wget 用的 <a href="http://vault.centos.org/6.5/os/x86_64/Packages/">http://vault.centos.org/6.5/os/x86_64/Packages/</a></p>

<p>因为后面要用downloadonly 选项，所以需要下载包括4个rpm包: <br/>
yum-3.2.29-40.el6.centos.noarch.rpm <br/>
yum-metadata-parser-1.1.2-16.el6.x86_64.rpm<br/>
yum-plugin-downloadonly-1.1.30-14.el6.noarch.rpm  <br/>
yum-plugin-fastestmirror-1.1.30-14.el6.noarch.rpm</p>

<p>将其放到同一个文件夹中然后 <br/>
<code>
rpm -aq|grep yum|xargs rpm -e --nodeps #卸载自带yum
rpm -ivh *.rpm
</code></p>

<p>完成yum的更换。</p>

<p>接着在有网络的情况下 使用 yum 的 &ndash;downloadonly 选项 下载 createrepo libGL-devel ，gcc-c++ 的相关rpm 包 。</p>

<p>使用离线rpm的形式安装createrepo</p>

<p>参照 <a href="http://blog.csdn.net/lanjianhun/article/details/69360406">http://blog.csdn.net/lanjianhun/article/details/69360406</a> 将本地的rpm 包 配置成软件仓库 。<br/>
将 /etc/yum.repos.d/CentOS-Media.repo 中的 gpgcheck=1 修改为0 .</p>

<p>然后用 yum install libGL-devel 从本地仓库中安装openGL 。<br/>
至于g++ ，不知道为什么yum install gcc-c++ 提示找不到该库，此时参照<a href="http://blog.sina.com.cn/s/blog_c22e36090102vt0f.html">http://blog.sina.com.cn/s/blog_c22e36090102vt0f.html</a><br/>
离线手动安装gcc-c++</p>

<p>两个依赖库安装完成之后，直接傻瓜安装Qt ，运行 qt-opensource-linux-x64-5.6.3.run 即可</p>

<p>然后就是安装 qwt ，
<code>
cd qwt-6.1.3  
qmake #没有配置环境变量的话，加上绝对路径  
make
make install
</code></p>

<p>验证安装: <br/>
用qtcreator  打开 qwt下的example 目录下的任意项目 ，编译运行没有问题即可 。</p>

<div id="container"></div>


<p><link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"></p>

<script src="https://imsun.github.io/gitment/dist/gitment.browser.js"></script>


<script>
var gitment = new Gitment({
  id: 'location.href', // 可选。默认为 location.href
  owner: 'kevin20x2',
  repo: 'blog_comment',
  oauth: {
    client_id: '0d172133d26f520041e6',
    client_secret: '14eef65983bd9d0e16313feaffcf1684fc3713a9',
  },
})
gitment.render('container')
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[new_start]]></title>
    <link href="http://kevin20x2.github.io/blog/2018/01/05/new-start/"/>
    <updated>2018-01-05T22:15:16+08:00</updated>
    <id>http://kevin20x2.github.io/blog/2018/01/05/new-start</id>
    <content type="html"><![CDATA[<p>今天心血来潮想把断更两年多的blog 给捡起来，发现我以前折腾过的东西果然都忘记了。
包括markdown，octpress <br/>
这里还是简单说一下捡起来的过程吧。</p>

<!--more-->


<p>首先得去安装 ruby ，试过多个版本，最后还是用的1.9.3 的installer。</p>

<p>按照之前的老教程上的
<code>
gem install rdiscount --platform=ruby
gem install bundler
bundle install #这一步要在octpress目录下进行
</code></p>

<p>(这里试过其他版本的ruby ，不知道为什么老是出问题)</p>

<h2>SSL 的问题  参照 <a href="http://blog.csdn.net/zahuopuboss/article/details/53357503">这里</a></h2>

<p>解决方法</p>

<p>下载 <a href="https://curl.haxx.se/ca/cacert.pem">https://curl.haxx.se/ca/cacert.pem</a></p>

<p>把文件cacert.pem放到一个目录下</p>

<p>在cmd窗口设置环境变量</p>

<p>set SSL_CERT_FILE=C:\xxx\cacert.pem</p>

<p>或者通过系统->高级系统设置->环境变量设置SSL_CERT_FILE</p>

<h3>终于将bundle install 成功走完之后</h3>

<p>然后由于octopress 原来的电脑上就有，所以就没有从git上下载，直接拷贝过来。</p>

<p>发现</p>

<pre><code>rake generate
</code></pre>

<p>会出现如下问题</p>

<h4>Liquid Exception: incompatible encoding regexp match (ASCII-8BIT regexp with UTF-8 string) in _layouts/page.html</h4>

<h4>jekyll 2.5.3 | Error:  incompatible encoding regexp match (ASCII-8BIT regexp with UTF-8 string)</h4>

<hr />

<p>不知道是因为这个问题太老了还是什么，网上的回答针对性都不是很强，大概看了一下原理，认为是ruby代码编码的问题 os:为什么之前没碰到 (╯‵□′)╯︵┻━┻<br/>
于是将octpress 下的plugins 文件下的所有rb代码文件从UTF-8 改成了 UTF-8 with BOM(使用最原始的notepad++)<br/>
然后在powershell 命令行下重新 rake generate ，结果居然就好了。(汗)<br/>
剩下的就是
<code>
rake new_post["title"]
rake generate
rake preview
rake deploy
</code>
这一套流程了</p>

<p>然后关于blog，以后大概不怎么会发<strong>题解</strong>了，毕竟已经退役很久了<br/>
可能也就是记录一些有点价值的东西，嗯，这次折腾只花了一晚上加一早上，还不算特别浪费时间。</p>

<h2>add</h2>

<p>发现之前其实一直都没搞懂octpress的结构 <br/>
github 上的仓库是有两个分支的： master 和source 。<br/>
master上放的其实是本地的 _deploy文件夹，也就是运行blog的文件。</p>

<p>而source 则是包含了整个blog 运行机制的分支。<br/>
每次rake deploy 更新的是master 分支，然后push origin source 实际上是将本地写好的markdown 等内容同步。</p>

<h2>add again</h2>

<p>发现 blog的markdown 文件需要修改成 utf 不带 BOM格式的，不然会出现octpress无法识别blog 头然后格式错误的问题。</p>

<h2>add 2018.1.10</h2>

<p>今天写公式的时候法线  这种公式需要写成{ { } } ，不然ruby的正则库会报错 = =</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hdu4858]]></title>
    <link href="http://kevin20x2.github.io/blog/2015/03/31/hdu4858/"/>
    <updated>2015-03-31T21:39:56+08:00</updated>
    <id>http://kevin20x2.github.io/blog/2015/03/31/hdu4858</id>
    <content type="html"><![CDATA[<h2><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4858">项目管理</a></h2>

<!--more-->


<p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)
Total Submission(s): 1521    Accepted Submission(s): 556</p>

<h3>Problem Description</h3>

<p>我们建造了一个大项目！这个项目有n个节点，用很多边连接起来，并且这个项目是连通的！
两个节点间可能有多条边，不过一条边的两端必然是不同的节点。
每个节点都有一个能量值。</p>

<p>现在我们要编写一个项目管理软件，这个软件呢有两个操作：
1.给某个项目的能量值加上一个特定值。
2.询问跟一个项目相邻的项目的能量值之和。（如果有多条边就算多次，比如a和b有2条边，那么询问a的时候b的权值算2次）。</p>

<h3>Input</h3>

<p>第一行一个整数T(1 &lt;= T &lt;= 3),表示测试数据的个数。
然后对于每个测试数据，第一行有两个整数n(1 &lt;= n &lt;= 100000)和m(1 &lt;= m &lt;= n + 10)，分别表示点数和边数。</p>

<p>然后m行，每行两个数a和b，表示a和b之间有一条边。
然后一个整数Q。</p>

<p>然后Q行，每行第一个数cmd表示操作类型。如果cmd为0，那么接下来两个数u v表示给项目u的能量值加上v(0 &lt;= v &lt;= 100)。
如果cmd为1，那么接下来一个数u表示询问u相邻的项目的能量值之和。</p>

<p>所有点从1到n标号。</p>

<h3>Output</h3>

<p>对每个询问，输出一行表示答案。</p>

<h3>Sample Input</h3>

<p>1<br/>
3 2<br/>
1 2<br/>
1 3<br/>
6<br/>
0 1 15<br/>
0 3 4 <br/>
1 1<br/>
1 3 <br/>
0 2 33<br/>
1 2</p>

<h3>Sample Output</h3>

<p>4<br/>
15<br/>
15</p>

<h4>Author</h4>

<p>CLJ</p>

<h4>Source</h4>

<p>BestCoder Round #1</p>

<p>直接模拟就行了， 会超时的原因是卡了输入和输出， 这个时候又要用挂了orz</p>

<pre><code class="cpp">#include&lt;cstdio&gt;
#include&lt;iostream&gt;
#include&lt;cstring&gt;
#include&lt;cmath&gt;
#include&lt;vector&gt;
#include&lt;algorithm&gt;
typedef  long long LL;

#define clr(x) memset((x),0,sizeof(x))
#define inf 0x3f3f3f3f

using namespace std;
vector &lt;int &gt; v[100010];
int ans [100010];
int n,m;
void read2(int &amp; x)
{
      char c;
    bool neg=false;
    while(((c=getchar())&lt;'0'||c&gt;'9')&amp;&amp;c!='-');
    if(c=='-')
    {
        neg=true;
        while((c=getchar())&lt;'0'||c&gt;'9');
    }
    x=c-'0';
    while(c=getchar(),c&gt;='0'&amp;&amp;c&lt;='9') x=x*10+c-'0';
    if(neg) x=-x;
}
void out(int a)
{
    if(a&gt;9)
        out(a/10);
    putchar(a%10+'0');
}

int main()
{
    int t ;
    scanf("%d",&amp;t);
    int x,y,z;
    while(t--)
    {
        scanf("%d%d",&amp;n,&amp;m);
        for(int i =1;i&lt;=n;i++)
            v[i].clear();
        for(int i =1;i&lt;=m;i++)
        {
            read2(x);read2(y);
            v[x].push_back(y);
            v[y].push_back(x);
        }
        int q;
        memset(ans,0,sizeof ans);
        scanf("%d",&amp;q);
        while(q--)
        {
            read2(x);
            if(x==0)
            {
                read2(y);read2(z);
                for(int i = 0;i&lt;v[y].size();i++)
                {
                    ans[v[y][i]] += z;
                }

            }
            else 
            {
                read2(y);
                out(ans[y]);
                putchar('\n');

            }

        }

    }
    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hdu4857]]></title>
    <link href="http://kevin20x2.github.io/blog/2015/03/31/hdu4857/"/>
    <updated>2015-03-31T21:30:22+08:00</updated>
    <id>http://kevin20x2.github.io/blog/2015/03/31/hdu4857</id>
    <content type="html"><![CDATA[<!--more-->


<h2><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4857">逃生</a></h2>

<h3>Problem Description</h3>

<p>糟糕的事情发生啦，现在大家都忙着逃命。但是逃命的通道很窄，大家只能排成一行。</p>

<p>现在有n个人，从1标号到n。同时有一些奇怪的约束条件，每个都形如：a必须在b之前。
同时，社会是不平等的，这些人有的穷有的富。1号最富，2号第二富，以此类推。有钱人就贿赂负责人，所以他们有一些好处。</p>

<p>负责人现在可以安排大家排队的顺序，由于收了好处，所以他要让1号尽量靠前，如果此时还有多种情况，就再让2号尽量靠前，如果还有多种情况，就让3号尽量靠前，以此类推。</p>

<p>那么你就要安排大家的顺序。我们保证一定有解。</p>

<h3>Input</h3>

<p>第一行一个整数T(1 &lt;= T &lt;= 5),表示测试数据的个数。
然后对于每个测试数据，第一行有两个整数n(1 &lt;= n &lt;= 30000)和m(1 &lt;= m &lt;= 100000)，分别表示人数和约束的个数。</p>

<p>然后m行，每行两个整数a和b，表示有一个约束a号必须在b号之前。a和b必然不同。</p>

<h3>Output</h3>

<p>对每个测试数据，输出一行排队的顺序，用空格隔开。</p>

<h3>Sample Input</h3>

<p>1<br/>
5 10<br/>
3 5<br/>
1 4<br/>
2 5<br/>
1 2<br/>
3 4<br/>
1 4<br/>
2 3<br/>
1 5<br/>
3 5<br/>
1 2</p>

<h3>Sample Output</h3>

<p>1 2 3 4 5</p>

<h4>Author</h4>

<p>CLJ</p>

<h4>Source</h4>

<p>BestCoder Round #1</p>

<p>拓扑排序加优先队列 ， 放在hdu上的测试 丧心病狂的卡了时间 用输入挂解决，再就是题目中要求编号小的尽量放前面，因此是逆序建图，然后优先队列先处理大的。</p>

<pre><code class="cpp">#include&lt;cstdio&gt;
#include&lt;cstring&gt;
#include&lt;cmath&gt;
#include&lt;iostream&gt;
#include&lt;algorithm&gt;
#include&lt;vector&gt;
#include&lt;queue&gt;
const int maxn=30010;
using namespace std;

vector&lt;int&gt; e[maxn];
int n,m,in[maxn],ans[maxn],cnt;

struct cmp
{
  bool operator ()(int &amp;a,int &amp;b){
    return a&lt;b;//最大值优先
  }
};
void read2(int &amp;x)
{
    char c;
    bool neg = false;
    while(((c=getchar())&lt;'0'||c&gt;'9')&amp;&amp;c!='-');
    if(c=='-')
    {
        neg = true;
        while((c=getchar())&lt;'0'||c&gt;'9');
    }
    x= c-'0';
    while(c=getchar(),c&gt;='0'&amp;&amp;c&lt;='9') x= x*10+c-'0';
    if(neg) x=-x;
}

void topo()
{
  priority_queue&lt;int,vector&lt;int&gt;,cmp&gt; q;
  for(int i=1;i&lt;=n;i++)
    if(in[i]==0) q.push(i);
  int flag=0;
  int x,i;
  while(!q.empty())
  {
    x=q.top();
    q.pop();
    ans[++cnt]=x;
    for(i=0;i&lt;e[x].size();i++)
    {
      in[e[x][i]]--;
      if(in[e[x][i]]==0)
        q.push(e[x][i]);
    }
  }
}

int main()
{
  int t,a,b,i;
  scanf("%d",&amp;t);
  while(t--)
  {
    scanf("%d%d",&amp;n,&amp;m);
    for(i=0;i&lt;=n;i++)
      e[i].clear();
    memset(in,0,sizeof in);
    while(m--)
    {
      read2(a);read2(b);
      e[b].push_back(a);
      in[a]++;
    }
    cnt=0;
    topo();
    printf("%d",ans[cnt]);
    for(i=cnt-1;i&gt;0;i--)
      printf(" %d",ans[i]);
    puts("");
  }
  return 0;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
